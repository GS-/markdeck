#!/bin/bash
set -e -E -u

PORT=8080

live-server --port=$PORT /target &

ln -sf /target/rendered .
while true; do
    [[ -d /target/rendered ]] || mkdir -p /target/rendered
    echo -e "\n\n\n\n\n\n\n\n\n\n"

    echo "-------- rsync output --------"
    rsync -Pav /source/assets /md2deck/assets /target/ || :
    echo "-------- /rsync output --------"
    echo

    echo "-------- config --------"
    [[ -e /source/config ]] && source /source/config
    MD2DECK_TITLE=${title:-md2deck}
    MD2DECK_THEME=${theme:-simple}
    MD2DECK_TRANSITION=${transition:-slide}
    for V in ${!MD2DECK_@}; do
        echo $V=${!V}
    done
    echo "-------- /config --------"
    echo

    echo "-------- pandoc output --------"
    /md2deck/bin/pandoc \
        -f markdown \
        -t html5 \
        --standalone \
        --template=/md2deck/template-revealjs.html \
        --section-divs \
        --lua-filter /md2deck/lib/render-asciiart-filter.lua \
        --variable theme=$MD2DECK_THEME \
        --variable transition=$MD2DECK_TRANSITION \
        --variable title="$MD2DECK_TITLE" \
        -o /target/index.html \
        /source/slides.md || :
    echo "-------- /pandoc output --------"
    echo

    sleep .5
    echo -e "\n\n\nopen http://localhost:$PORT\n\n(... or use Ctrl-C to stop md2deck)\n\n\n"
    inotifywait -r -q /source/
done

echo "done."
