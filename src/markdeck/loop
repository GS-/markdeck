#!/bin/bash
set -e -E -u

PORT=8080
PORT_HELPER=8081
ONCE=false

PARAM=${1:-loop}
case $PARAM in
    shell)  bash -i; exit;;
    --once) ONCE=true;;
    loop)   ;;
    *)      echo "unknown parameter '$PARAM' given, aborting here..." && exit 1;;
esac

shopt -s nullglob

$ONCE || live-server --port=$PORT --ignore='**/*.pdf' /target > /tmp/live-server.log 2>&1 &
$ONCE || live-server --port=$PORT_HELPER /markdeck/helper > /tmp/helper.log 2>&1 &

[[ -e /source/render-asciiart-filter.config ]] && \
    ASCIIART_CONFIG=/source/render-asciiart-filter.config || \
    ASCIIART_CONFIG=/markdeck/lib/render-asciiart-filter.config
export ASCIIART_CONFIG
export ASCIIART_LIBDIR=/markdeck/lib

while true; do
    cd /target
    [[ -d /target/rendered ]] || mkdir -p /target/rendered

    echo "-------- rsync output --------"
    rsync -av /markdeck/assets /target/ || :
    touch /target/assets/css/slides.css /target/assets/css/render-pdf.css
    [[ -d /source/assets ]] && rsync -av /source/assets /target/ || :
    echo "-------- /rsync output --------"
    echo

    echo "-------- config --------"
    source /markdeck/default.config
    [[ -e /source/config ]] && source /source/config
    MARKDECK_TEMPLATE=/markdeck/template-${variant}.html
    for V in $(sed "s/=.*//" /markdeck/default.config); do
        echo $V=${!V}
    done
    echo ASCIIART_CONFIG=$ASCIIART_CONFIG
    echo "-------- /config --------"
    echo

    echo "-------- pandoc output --------"
    [[ -e /source/slides.md ]] && SOURCE_MD=/source/slides.md || SOURCE_MD=/markdeck/note.md
    /markdeck/bin/pandoc \
        --no-highlight \
        -f markdown \
        -t html5 \
        --standalone \
        --template=$MARKDECK_TEMPLATE \
        --section-divs \
        --lua-filter /markdeck/lib/render-asciiart-filter.lua \
        --lua-filter /markdeck/lib/${variant}-shortcut-filter.lua \
        --variable theme=${theme} \
        --variable transition=${transition} \
        --variable title="${title}" \
        --variable controls="${controls}" \
        --variable highlight_style="${highlight_style}" \
        -o /target/index.html \
        $SOURCE_MD || :
    echo "-------- /pandoc output --------"
    echo

    if [[ -n "$pdf" ]]; then
        echo "-------- decktape output --------"
        PDF_FILE="$(basename "$pdf" .pdf).pdf"
        decktape reveal -s $pdf_size \
            --no-sandbox \
            -p $pdf_delay \
            "http://localhost:8080/index.html?render=pdf" "/target/$PDF_FILE"
        (cd /target && du -h $PDF_FILE)
        echo "-------- /decktape output --------"
    fi

    $ONCE && break

    if [[ /source -nt /target/index.html ]]; then
        echo -e "\n\n\nchange detected, rerendering started...\n\n\n"
        continue
    fi
    if [[ -n "$pdf" ]] && [[ /target/index.html -nt $PDF_FILE ]]; then
        echo -e "\n\n\nchange detected, rerendering started...\n\n\n"
        continue
    fi

    sleep .5
    echo -e "\n\n\nmarkdeck $VERSION\n"
    echo -e "open http://localhost:$PORT\n"
    echo -e "(... or use Ctrl-C to stop markdeck)\n"

    if inotifywait -r -q \
        /source/*.md \
        /source/assets* \
        /source/*config \
        /markdeck/assets* \
        /markdeck/template*.html \
        /markdeck/lib/ > /tmp/inotifywait.log 2>&1; then
        :
    else
        echo -e "edit 'slides.md' now...\n\n\n"
        inotifywait -q -r /source
    fi
    echo -e "\n\n\n\n\n\n\n\n\n\n"
done

echo "done."
